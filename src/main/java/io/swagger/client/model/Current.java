/*
 * Weather API
 *  # Introduction  WeatherAPI.com provides access to weather and geo data via a JSON/XML restful API. It allows developers to create desktop, web and mobile applications using this data very easy.      We provide following data through our API:      - Real-time weather  - 14 day weather forecast  - Astronomy  - Time zone  - Location data  - Search or Autocomplete API  - NEW: Historical weather  - NEW: Future Weather (Upto 300 days ahead)  - Weather Alerts  - Air Quality Data    # Getting Started     You need to [signup](https://www.weatherapi.com/signup.aspx) and then you can find your API key under [your account](https://www.weatherapi.com/login.aspx), and start using API right away!      We have [code libraries](https://www.weatherapi.com/docs/code-libraries.aspx) for different programming languages like PHP, .net, JAVA, etc.  If you find any features missing or have any suggestions, please [contact us](https://www.weatherapi.com/contact.aspx).      # Authentication     API access to the data is protected by an API key. If at anytime, you find the API key has become vulnerable, please regenerate the key using Regenerate button next to the API key.  Authentication to the WeatherAPI.com API is provided by passing your API key as request parameter through an API .        ##  key parameter   key=YOUR_API_KEY 
 *
 * OpenAPI spec version: 1.0.0-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CurrentAirQuality;
import io.swagger.client.model.CurrentCondition;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Current
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-22T21:39:34.951Z[GMT]")
public class Current {
  @SerializedName("last_updated_epoch")
  private Integer lastUpdatedEpoch = null;

  @SerializedName("last_updated")
  private String lastUpdated = null;

  @SerializedName("temp_c")
  private BigDecimal tempC = null;

  @SerializedName("temp_f")
  private BigDecimal tempF = null;

  @SerializedName("is_day")
  private Integer isDay = null;

  @SerializedName("condition")
  private CurrentCondition condition = null;

  @SerializedName("wind_mph")
  private BigDecimal windMph = null;

  @SerializedName("wind_kph")
  private BigDecimal windKph = null;

  @SerializedName("wind_degree")
  private Integer windDegree = null;

  @SerializedName("wind_dir")
  private String windDir = null;

  @SerializedName("pressure_mb")
  private Integer pressureMb = null;

  @SerializedName("pressure_in")
  private BigDecimal pressureIn = null;

  @SerializedName("precip_mm")
  private Integer precipMm = null;

  @SerializedName("precip_in")
  private Integer precipIn = null;

  @SerializedName("humidity")
  private Integer humidity = null;

  @SerializedName("cloud")
  private Integer cloud = null;

  @SerializedName("feelslike_c")
  private Integer feelslikeC = null;

  @SerializedName("feelslike_f")
  private BigDecimal feelslikeF = null;

  @SerializedName("vis_km")
  private Integer visKm = null;

  @SerializedName("vis_miles")
  private Integer visMiles = null;

  @SerializedName("uv")
  private Integer uv = null;

  @SerializedName("gust_mph")
  private BigDecimal gustMph = null;

  @SerializedName("gust_kph")
  private BigDecimal gustKph = null;

  @SerializedName("air_quality")
  private CurrentAirQuality airQuality = null;

  public Current lastUpdatedEpoch(Integer lastUpdatedEpoch) {
    this.lastUpdatedEpoch = lastUpdatedEpoch;
    return this;
  }

   /**
   * Get lastUpdatedEpoch
   * @return lastUpdatedEpoch
  **/
  @Schema(example = "1658522700", description = "")
  public Integer getLastUpdatedEpoch() {
    return lastUpdatedEpoch;
  }

  public void setLastUpdatedEpoch(Integer lastUpdatedEpoch) {
    this.lastUpdatedEpoch = lastUpdatedEpoch;
  }

  public Current lastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @Schema(example = "2022-07-22 16:45", description = "")
  public String getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
  }

  public Current tempC(BigDecimal tempC) {
    this.tempC = tempC;
    return this;
  }

   /**
   * Get tempC
   * @return tempC
  **/
  @Schema(example = "34.4", description = "")
  public BigDecimal getTempC() {
    return tempC;
  }

  public void setTempC(BigDecimal tempC) {
    this.tempC = tempC;
  }

  public Current tempF(BigDecimal tempF) {
    this.tempF = tempF;
    return this;
  }

   /**
   * Get tempF
   * @return tempF
  **/
  @Schema(example = "93.9", description = "")
  public BigDecimal getTempF() {
    return tempF;
  }

  public void setTempF(BigDecimal tempF) {
    this.tempF = tempF;
  }

  public Current isDay(Integer isDay) {
    this.isDay = isDay;
    return this;
  }

   /**
   * Get isDay
   * @return isDay
  **/
  @Schema(example = "1", description = "")
  public Integer getIsDay() {
    return isDay;
  }

  public void setIsDay(Integer isDay) {
    this.isDay = isDay;
  }

  public Current condition(CurrentCondition condition) {
    this.condition = condition;
    return this;
  }

   /**
   * Get condition
   * @return condition
  **/
  @Schema(description = "")
  public CurrentCondition getCondition() {
    return condition;
  }

  public void setCondition(CurrentCondition condition) {
    this.condition = condition;
  }

  public Current windMph(BigDecimal windMph) {
    this.windMph = windMph;
    return this;
  }

   /**
   * Get windMph
   * @return windMph
  **/
  @Schema(example = "16.1", description = "")
  public BigDecimal getWindMph() {
    return windMph;
  }

  public void setWindMph(BigDecimal windMph) {
    this.windMph = windMph;
  }

  public Current windKph(BigDecimal windKph) {
    this.windKph = windKph;
    return this;
  }

   /**
   * Get windKph
   * @return windKph
  **/
  @Schema(example = "25.9", description = "")
  public BigDecimal getWindKph() {
    return windKph;
  }

  public void setWindKph(BigDecimal windKph) {
    this.windKph = windKph;
  }

  public Current windDegree(Integer windDegree) {
    this.windDegree = windDegree;
    return this;
  }

   /**
   * Get windDegree
   * @return windDegree
  **/
  @Schema(example = "180", description = "")
  public Integer getWindDegree() {
    return windDegree;
  }

  public void setWindDegree(Integer windDegree) {
    this.windDegree = windDegree;
  }

  public Current windDir(String windDir) {
    this.windDir = windDir;
    return this;
  }

   /**
   * Get windDir
   * @return windDir
  **/
  @Schema(example = "S", description = "")
  public String getWindDir() {
    return windDir;
  }

  public void setWindDir(String windDir) {
    this.windDir = windDir;
  }

  public Current pressureMb(Integer pressureMb) {
    this.pressureMb = pressureMb;
    return this;
  }

   /**
   * Get pressureMb
   * @return pressureMb
  **/
  @Schema(example = "1011", description = "")
  public Integer getPressureMb() {
    return pressureMb;
  }

  public void setPressureMb(Integer pressureMb) {
    this.pressureMb = pressureMb;
  }

  public Current pressureIn(BigDecimal pressureIn) {
    this.pressureIn = pressureIn;
    return this;
  }

   /**
   * Get pressureIn
   * @return pressureIn
  **/
  @Schema(example = "29.85", description = "")
  public BigDecimal getPressureIn() {
    return pressureIn;
  }

  public void setPressureIn(BigDecimal pressureIn) {
    this.pressureIn = pressureIn;
  }

  public Current precipMm(Integer precipMm) {
    this.precipMm = precipMm;
    return this;
  }

   /**
   * Get precipMm
   * @return precipMm
  **/
  @Schema(example = "0", description = "")
  public Integer getPrecipMm() {
    return precipMm;
  }

  public void setPrecipMm(Integer precipMm) {
    this.precipMm = precipMm;
  }

  public Current precipIn(Integer precipIn) {
    this.precipIn = precipIn;
    return this;
  }

   /**
   * Get precipIn
   * @return precipIn
  **/
  @Schema(example = "0", description = "")
  public Integer getPrecipIn() {
    return precipIn;
  }

  public void setPrecipIn(Integer precipIn) {
    this.precipIn = precipIn;
  }

  public Current humidity(Integer humidity) {
    this.humidity = humidity;
    return this;
  }

   /**
   * Get humidity
   * @return humidity
  **/
  @Schema(example = "31", description = "")
  public Integer getHumidity() {
    return humidity;
  }

  public void setHumidity(Integer humidity) {
    this.humidity = humidity;
  }

  public Current cloud(Integer cloud) {
    this.cloud = cloud;
    return this;
  }

   /**
   * Get cloud
   * @return cloud
  **/
  @Schema(example = "75", description = "")
  public Integer getCloud() {
    return cloud;
  }

  public void setCloud(Integer cloud) {
    this.cloud = cloud;
  }

  public Current feelslikeC(Integer feelslikeC) {
    this.feelslikeC = feelslikeC;
    return this;
  }

   /**
   * Get feelslikeC
   * @return feelslikeC
  **/
  @Schema(example = "37", description = "")
  public Integer getFeelslikeC() {
    return feelslikeC;
  }

  public void setFeelslikeC(Integer feelslikeC) {
    this.feelslikeC = feelslikeC;
  }

  public Current feelslikeF(BigDecimal feelslikeF) {
    this.feelslikeF = feelslikeF;
    return this;
  }

   /**
   * Get feelslikeF
   * @return feelslikeF
  **/
  @Schema(example = "98.6", description = "")
  public BigDecimal getFeelslikeF() {
    return feelslikeF;
  }

  public void setFeelslikeF(BigDecimal feelslikeF) {
    this.feelslikeF = feelslikeF;
  }

  public Current visKm(Integer visKm) {
    this.visKm = visKm;
    return this;
  }

   /**
   * Get visKm
   * @return visKm
  **/
  @Schema(example = "16", description = "")
  public Integer getVisKm() {
    return visKm;
  }

  public void setVisKm(Integer visKm) {
    this.visKm = visKm;
  }

  public Current visMiles(Integer visMiles) {
    this.visMiles = visMiles;
    return this;
  }

   /**
   * Get visMiles
   * @return visMiles
  **/
  @Schema(example = "9", description = "")
  public Integer getVisMiles() {
    return visMiles;
  }

  public void setVisMiles(Integer visMiles) {
    this.visMiles = visMiles;
  }

  public Current uv(Integer uv) {
    this.uv = uv;
    return this;
  }

   /**
   * Get uv
   * @return uv
  **/
  @Schema(example = "8", description = "")
  public Integer getUv() {
    return uv;
  }

  public void setUv(Integer uv) {
    this.uv = uv;
  }

  public Current gustMph(BigDecimal gustMph) {
    this.gustMph = gustMph;
    return this;
  }

   /**
   * Get gustMph
   * @return gustMph
  **/
  @Schema(example = "11.6", description = "")
  public BigDecimal getGustMph() {
    return gustMph;
  }

  public void setGustMph(BigDecimal gustMph) {
    this.gustMph = gustMph;
  }

  public Current gustKph(BigDecimal gustKph) {
    this.gustKph = gustKph;
    return this;
  }

   /**
   * Get gustKph
   * @return gustKph
  **/
  @Schema(example = "18.7", description = "")
  public BigDecimal getGustKph() {
    return gustKph;
  }

  public void setGustKph(BigDecimal gustKph) {
    this.gustKph = gustKph;
  }

  public Current airQuality(CurrentAirQuality airQuality) {
    this.airQuality = airQuality;
    return this;
  }

   /**
   * Get airQuality
   * @return airQuality
  **/
  @Schema(description = "")
  public CurrentAirQuality getAirQuality() {
    return airQuality;
  }

  public void setAirQuality(CurrentAirQuality airQuality) {
    this.airQuality = airQuality;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Current current = (Current) o;
    return Objects.equals(this.lastUpdatedEpoch, current.lastUpdatedEpoch) &&
        Objects.equals(this.lastUpdated, current.lastUpdated) &&
        Objects.equals(this.tempC, current.tempC) &&
        Objects.equals(this.tempF, current.tempF) &&
        Objects.equals(this.isDay, current.isDay) &&
        Objects.equals(this.condition, current.condition) &&
        Objects.equals(this.windMph, current.windMph) &&
        Objects.equals(this.windKph, current.windKph) &&
        Objects.equals(this.windDegree, current.windDegree) &&
        Objects.equals(this.windDir, current.windDir) &&
        Objects.equals(this.pressureMb, current.pressureMb) &&
        Objects.equals(this.pressureIn, current.pressureIn) &&
        Objects.equals(this.precipMm, current.precipMm) &&
        Objects.equals(this.precipIn, current.precipIn) &&
        Objects.equals(this.humidity, current.humidity) &&
        Objects.equals(this.cloud, current.cloud) &&
        Objects.equals(this.feelslikeC, current.feelslikeC) &&
        Objects.equals(this.feelslikeF, current.feelslikeF) &&
        Objects.equals(this.visKm, current.visKm) &&
        Objects.equals(this.visMiles, current.visMiles) &&
        Objects.equals(this.uv, current.uv) &&
        Objects.equals(this.gustMph, current.gustMph) &&
        Objects.equals(this.gustKph, current.gustKph) &&
        Objects.equals(this.airQuality, current.airQuality);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lastUpdatedEpoch, lastUpdated, tempC, tempF, isDay, condition, windMph, windKph, windDegree, windDir, pressureMb, pressureIn, precipMm, precipIn, humidity, cloud, feelslikeC, feelslikeF, visKm, visMiles, uv, gustMph, gustKph, airQuality);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Current {\n");
    
    sb.append("    lastUpdatedEpoch: ").append(toIndentedString(lastUpdatedEpoch)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    tempC: ").append(toIndentedString(tempC)).append("\n");
    sb.append("    tempF: ").append(toIndentedString(tempF)).append("\n");
    sb.append("    isDay: ").append(toIndentedString(isDay)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    windMph: ").append(toIndentedString(windMph)).append("\n");
    sb.append("    windKph: ").append(toIndentedString(windKph)).append("\n");
    sb.append("    windDegree: ").append(toIndentedString(windDegree)).append("\n");
    sb.append("    windDir: ").append(toIndentedString(windDir)).append("\n");
    sb.append("    pressureMb: ").append(toIndentedString(pressureMb)).append("\n");
    sb.append("    pressureIn: ").append(toIndentedString(pressureIn)).append("\n");
    sb.append("    precipMm: ").append(toIndentedString(precipMm)).append("\n");
    sb.append("    precipIn: ").append(toIndentedString(precipIn)).append("\n");
    sb.append("    humidity: ").append(toIndentedString(humidity)).append("\n");
    sb.append("    cloud: ").append(toIndentedString(cloud)).append("\n");
    sb.append("    feelslikeC: ").append(toIndentedString(feelslikeC)).append("\n");
    sb.append("    feelslikeF: ").append(toIndentedString(feelslikeF)).append("\n");
    sb.append("    visKm: ").append(toIndentedString(visKm)).append("\n");
    sb.append("    visMiles: ").append(toIndentedString(visMiles)).append("\n");
    sb.append("    uv: ").append(toIndentedString(uv)).append("\n");
    sb.append("    gustMph: ").append(toIndentedString(gustMph)).append("\n");
    sb.append("    gustKph: ").append(toIndentedString(gustKph)).append("\n");
    sb.append("    airQuality: ").append(toIndentedString(airQuality)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

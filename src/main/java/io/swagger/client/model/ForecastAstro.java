/*
 * Weather API
 *  # Introduction  WeatherAPI.com provides access to weather and geo data via a JSON/XML restful API. It allows developers to create desktop, web and mobile applications using this data very easy.      We provide following data through our API:      - Real-time weather  - 14 day weather forecast  - Astronomy  - Time zone  - Location data  - Search or Autocomplete API  - NEW: Historical weather  - NEW: Future Weather (Upto 300 days ahead)  - Weather Alerts  - Air Quality Data    # Getting Started     You need to [signup](https://www.weatherapi.com/signup.aspx) and then you can find your API key under [your account](https://www.weatherapi.com/login.aspx), and start using API right away!      We have [code libraries](https://www.weatherapi.com/docs/code-libraries.aspx) for different programming languages like PHP, .net, JAVA, etc.  If you find any features missing or have any suggestions, please [contact us](https://www.weatherapi.com/contact.aspx).      # Authentication     API access to the data is protected by an API key. If at anytime, you find the API key has become vulnerable, please regenerate the key using Regenerate button next to the API key.  Authentication to the WeatherAPI.com API is provided by passing your API key as request parameter through an API .        ##  key parameter   key=YOUR_API_KEY 
 *
 * OpenAPI spec version: 1.0.0-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ForecastAstro
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-22T21:39:34.951Z[GMT]")
public class ForecastAstro {
  @SerializedName("sunrise")
  private String sunrise = null;

  @SerializedName("sunset")
  private String sunset = null;

  @SerializedName("moonrise")
  private String moonrise = null;

  @SerializedName("moonset")
  private String moonset = null;

  @SerializedName("moon_phase")
  private String moonPhase = null;

  @SerializedName("moon_illumination")
  private String moonIllumination = null;

  public ForecastAstro sunrise(String sunrise) {
    this.sunrise = sunrise;
    return this;
  }

   /**
   * Get sunrise
   * @return sunrise
  **/
  @Schema(example = "05:44 AM", description = "")
  public String getSunrise() {
    return sunrise;
  }

  public void setSunrise(String sunrise) {
    this.sunrise = sunrise;
  }

  public ForecastAstro sunset(String sunset) {
    this.sunset = sunset;
    return this;
  }

   /**
   * Get sunset
   * @return sunset
  **/
  @Schema(example = "08:20 PM", description = "")
  public String getSunset() {
    return sunset;
  }

  public void setSunset(String sunset) {
    this.sunset = sunset;
  }

  public ForecastAstro moonrise(String moonrise) {
    this.moonrise = moonrise;
    return this;
  }

   /**
   * Get moonrise
   * @return moonrise
  **/
  @Schema(example = "12:58 AM", description = "")
  public String getMoonrise() {
    return moonrise;
  }

  public void setMoonrise(String moonrise) {
    this.moonrise = moonrise;
  }

  public ForecastAstro moonset(String moonset) {
    this.moonset = moonset;
    return this;
  }

   /**
   * Get moonset
   * @return moonset
  **/
  @Schema(example = "03:35 PM", description = "")
  public String getMoonset() {
    return moonset;
  }

  public void setMoonset(String moonset) {
    this.moonset = moonset;
  }

  public ForecastAstro moonPhase(String moonPhase) {
    this.moonPhase = moonPhase;
    return this;
  }

   /**
   * Get moonPhase
   * @return moonPhase
  **/
  @Schema(example = "Last Quarter", description = "")
  public String getMoonPhase() {
    return moonPhase;
  }

  public void setMoonPhase(String moonPhase) {
    this.moonPhase = moonPhase;
  }

  public ForecastAstro moonIllumination(String moonIllumination) {
    this.moonIllumination = moonIllumination;
    return this;
  }

   /**
   * Get moonIllumination
   * @return moonIllumination
  **/
  @Schema(example = "36", description = "")
  public String getMoonIllumination() {
    return moonIllumination;
  }

  public void setMoonIllumination(String moonIllumination) {
    this.moonIllumination = moonIllumination;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForecastAstro forecastAstro = (ForecastAstro) o;
    return Objects.equals(this.sunrise, forecastAstro.sunrise) &&
        Objects.equals(this.sunset, forecastAstro.sunset) &&
        Objects.equals(this.moonrise, forecastAstro.moonrise) &&
        Objects.equals(this.moonset, forecastAstro.moonset) &&
        Objects.equals(this.moonPhase, forecastAstro.moonPhase) &&
        Objects.equals(this.moonIllumination, forecastAstro.moonIllumination);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sunrise, sunset, moonrise, moonset, moonPhase, moonIllumination);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForecastAstro {\n");
    
    sb.append("    sunrise: ").append(toIndentedString(sunrise)).append("\n");
    sb.append("    sunset: ").append(toIndentedString(sunset)).append("\n");
    sb.append("    moonrise: ").append(toIndentedString(moonrise)).append("\n");
    sb.append("    moonset: ").append(toIndentedString(moonset)).append("\n");
    sb.append("    moonPhase: ").append(toIndentedString(moonPhase)).append("\n");
    sb.append("    moonIllumination: ").append(toIndentedString(moonIllumination)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
